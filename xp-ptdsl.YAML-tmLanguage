# [PackageDev] target_format: plist, ext: tmLanguage

# Copyright (c) 2015 Vitaly Pikalov
# Licensed under the MIT License

---
name: XP Positive DSL
scopeName: source.xp_dsl
fileTypes: [xp]
uuid: 63c2678b-9ea6-4cd6-b7a2-69f764e70ac6

patterns:

- name: meta.formulaId  # formula id
  match: '^\s*#\s*(id\s*:)\s*(\w+)\s*(.*)'
  captures:
    '1': {name: keyword.control.formulaId}
    '2': {name: constant}
    '3': {name: invalid.illegal}
- name: comment.line
  match: \#.*

- name: meta.cond
  match: ^\s*!?(COND)\s*=
  captures:
    '1': {name: keyword.control.cond}

# - name: string.formatString
- name: meta.formatString
  begin: ^\s*!?(TEXT|FORMAT|JSON|TABULAR|EVENTLOG|XML)\s*=\s*('|")
  beginCaptures:
    '1': {name: keyword.control.formatSpecifier}
  end: \2
  patterns:

  - name: meta.tokenGroup
    begin: \{
    end: \}
    patterns:
    - name: string.quoted
      begin: ('|")
      end: \1
      patterns:
      - include: '#escaped_char'
    - name: keyword.operator
      match: '[|?+*]'
    - name: meta.assignment
      match: \$?([.\w]+)\s*=\s* #(\w+)
      captures:
        '1': {name: variable.parameter}
    - name: constant.language.token
      match: WORDDASH|WORD|DATETIME|HOSTNAME|NUMBER|LITERAL|STRING|IPV4|IPV6|MACADDR|NTUSER|REST
    - include: '#escaped_char' # experimental. maybe, not for use inside the tokengroup
    # - name: invalid.illegal # WARN: false positives are not thoroughly excluded (mind 'tabular')
    #   match: .

  - include: '#escaped_char'
  - name: string
    match: .


- name: string
  match: \'\'|\"\"
- name: string
  begin: ('|")
  end: '[^\\]\1'


# - name: variable.other # local vars like $tmp
#   match: \$\w+
# - name: variable # standard variable from the taxonomy
#   match: \w+

# - name: invalid  ####### uncomment to see nonmatched
#   match: .

repository:
  escaped_char:
    name: constant.character.escape
    match: \\.

...
